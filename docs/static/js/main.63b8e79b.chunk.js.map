{"version":3,"sources":["BookmarkletLink.js","GummyBearSection.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["bookmarklet","default","debug","soft","hard","createBookmarkletLink","type","text","size","className","href","__html","BookmarkletLink","props","wrapClassName","dangerouslySetInnerHTML","buttonSize","buttonClassName","onClick","whenClick","defaultColors","GummyBearSection","rotatedColors","colors","rotation","i","firstColor","shift","push","rotateColors","maxColors","slice","limitNumberOfColors","max","calcOffset","index","offset","columns","map","color","src","process","alt","height","Navbar","id","Nav","defaultActiveKey","onSelect","selectedKey","alert","variant","Item","Link","eventKey","App","state","jellified","this","setState","inline","getTextAboveJellifyButton","springConfig","presets","wobbly","direction","getJellifyButtonClassName","setJellified","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63b8e79b.chunk.js","sourcesContent":["const bookmarklet = {\n  default:\n    '[\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\",\"https://cdn.jsdelivr.net/npm/matter-js@0.17.1/build/matter.min.js\",\"https://sc420.github.io/jellify-ur-website/js/jellify.js\"].forEach(e=>{const t=document.getElementsByTagName(\"head\")[0],s=document.createElement(\"script\");s.src=e,t.appendChild(s)});',\n  debug:\n    '(()=>{window.JELLIFY_DEBUG=1;[\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\",\"https://cdn.jsdelivr.net/npm/matter-js@0.17.1/build/matter.min.js\",\"https://sc420.github.io/jellify-ur-website/js/jellify.js\"].forEach(e=>{const t=document.getElementsByTagName(\"head\")[0],s=document.createElement(\"script\");s.src=e,t.appendChild(s)})})();',\n  soft: '(()=>{window.JELLIFY_OPTIONS={physics:{constraint:{minStiffness:.001}}};[\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\",\"https://cdn.jsdelivr.net/npm/matter-js@0.17.1/build/matter.min.js\",\"https://sc420.github.io/jellify-ur-website/js/jellify.js\"].forEach(e=>{const t=document.getElementsByTagName(\"head\")[0],s=document.createElement(\"script\");s.src=e,t.appendChild(s)})})();',\n  hard: '(()=>{window.JELLIFY_OPTIONS={physics:{constraint:{minStiffness:.01}}};[\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\",\"https://cdn.jsdelivr.net/npm/matter-js@0.17.1/build/matter.min.js\",\"https://sc420.github.io/jellify-ur-website/js/jellify.js\"].forEach(e=>{const t=document.getElementsByTagName(\"head\")[0],s=document.createElement(\"script\");s.src=e,t.appendChild(s)})})();',\n};\n\nfunction createBookmarkletLink(\n  type = \"default\",\n  text = \"Jellify\",\n  size = \"md\",\n  className = \"btn btn-primary\"\n) {\n  const href = `javascript:${bookmarklet[type]}`;\n  return {\n    __html: `<a class=\"${className} btn-${size}\" href='${href}'>${text}</a>`,\n  };\n}\n\nfunction BookmarkletLink(props) {\n  return (\n    <div\n      className={props.wrapClassName}\n      dangerouslySetInnerHTML={createBookmarkletLink(\n        props.type,\n        props.text,\n        props.buttonSize,\n        props.buttonClassName\n      )}\n      onClick={props.whenClick}\n    ></div>\n  );\n}\n\nexport default BookmarkletLink;\n","const defaultColors = [\"yellow\", \"green\", \"blue\", \"orange\", \"red\", \"purple\"];\n\nfunction rotateColors(colors, rotation) {\n  const rotatedColors = [...colors];\n  for (let i = 0; i < rotation; i += 1) {\n    const firstColor = rotatedColors[0];\n    rotatedColors.shift();\n    rotatedColors.push(firstColor);\n  }\n  return rotatedColors;\n}\n\nfunction limitNumberOfColors(colors, maxColors) {\n  return colors.slice(0, maxColors);\n}\n\nfunction GummyBearSection(props) {\n  const rotatedColors = rotateColors(defaultColors, props.rotation);\n  const colors = limitNumberOfColors(rotatedColors, props.max);\n\n  let calcOffset = (index) => {\n    if (index === 0) return props.offset;\n    return 0;\n  };\n\n  const columns = colors.map((color, index) => (\n    <div className={`col-2 offset-${calcOffset(index)}`} key={index}>\n      <img\n      className=\"m-3\"\n        src={`${process.env.PUBLIC_URL}/img/gummy-bear-${color}.png`}\n        alt=\"gummy-bear\"\n        height=\"200px\"\n      />\n    </div>\n  ));\n\n  return (\n    <section>\n      <div className=\"row p-3\">{columns}</div>\n    </section>\n  );\n}\n\nexport default GummyBearSection;\n","import { Nav } from \"react-bootstrap\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"#/\">\n          Jellify Bookmarklet\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarCollapse\"\n          aria-controls=\"navbarCollapse\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav me-auto my-2 my-lg-0\">\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                href=\"https://github.com/sc420/jellify-ur-website\"\n              >\n                GitHub\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"https://shawnchang420.blogspot.com/\">\n                Blog\n              </a>\n            </li>\n          </ul>\n\n          <Nav\n            className=\"ms-auto my-2 my-lg-0\"\n            defaultActiveKey=\"lang-en\"\n            onSelect={(selectedKey) => alert(`selected ${selectedKey}`)}\n            variant=\"pills\"\n          >\n            <Nav.Item>\n              <Nav.Link eventKey=\"lang-en\">English</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"lang-tw\">繁體中文</Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nimport TextTransition, { presets } from \"react-text-transition\";\n\nimport BookmarkletLink from \"./BookmarkletLink\";\nimport GummyBearSection from \"./GummyBearSection\";\nimport Navbar from \"./Navbar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jellified: false,\n    };\n  }\n\n  getTextAboveJellifyButton() {\n    if (this.state.jellified) {\n      return \"Jellified! Try Scrolling Down\";\n    } else {\n      return \"Click the Button to Jellify This Page\";\n    }\n  }\n\n  getJellifyButtonClassName() {\n    return this.state.jellified ? \"btn btn-secondary\" : \"btn btn-primary\";\n  }\n\n  setJellified() {\n    this.setState({\n      jellified: true,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n\n        <main className=\"container\">\n          <div className=\"p-3 bg-light rounded-3\">\n            <div className=\"container p-3\">\n              <h1 className=\"display-3 fw-bold text-center\">\n                <div className=\"d-flex align-items-center justify-content-center\">\n                  <div className=\"p-3\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/img/gummy-bear-yellow.png`}\n                      alt=\"gummy-bear\"\n                      height=\"200px\"\n                    />\n                  </div>\n                  <div className=\"p-3\">Jellify</div>\n                  <div className=\"p-3\">\n                    <img\n                      src={`${process.env.PUBLIC_URL}/img/gummy-bear-yellow.png`}\n                      alt=\"gummy-bear\"\n                      height=\"200px\"\n                    />\n                  </div>\n                </div>\n              </h1>\n              <div className=\"fs-4 text-center mt-3\">\n                <div>\n                  <TextTransition\n                    inline={true}\n                    text={this.getTextAboveJellifyButton()}\n                    springConfig={presets.wobbly}\n                    direction=\"up\"\n                  />\n                </div>\n                <i className=\"bi bi-chevron-double-down\"></i>\n              </div>\n              <BookmarkletLink\n                buttonClassName={this.getJellifyButtonClassName()}\n                buttonSize=\"lg\"\n                className=\"text-center\"\n                type=\"default\"\n                whenClick={this.setJellified.bind(this)}\n                wrapClassName=\"d-grid gap-2 col-3 mx-auto mt-1\"\n              />\n              <div className=\"fs-5 mt-2 text-center text-muted\">\n                Drag this button to your bookmarks bar to jellify other pages\n                too!\n              </div>\n            </div>\n          </div>\n\n          <GummyBearSection rotation=\"0\" max=\"6\" offset=\"0\" />\n          <GummyBearSection rotation=\"1\" max=\"5\" offset=\"1\" />\n          <GummyBearSection rotation=\"1\" max=\"6\" offset=\"0\" />\n          <GummyBearSection rotation=\"2\" max=\"5\" offset=\"1\" />\n          <GummyBearSection rotation=\"2\" max=\"6\" offset=\"0\" />\n          <GummyBearSection rotation=\"3\" max=\"5\" offset=\"1\" />\n\n          <section className=\"my-5\">\n            <h2>About This Bookmarklet</h2>\n            <p>\n              It was a side project I made just for fun! I was inspired by the\n              reddit{\" \"}\n              <a href=\"https://www.reddit.com/r/badUIbattles/\">\n                r/badUIbattles\n              </a>{\" \"}\n              and the cool demo of{\" \"}\n              <a href=\"https://brm.io/matter-js/\">Matter.js</a>.\n            </p>\n\n            <p>\n              I think embedding physics simulator in a webpage is cool, but it\n              gets boring very soon. How can I enjoy both surfing the website\n              and playing the physics engine? Why not combine both? So I created\n              this bookmarklet to turn every website element into a physics\n              object, tie them with some invisible springs and see what would\n              happen.\n            </p>\n\n            <p>\n              Visit{\" \"}\n              <a href=\"https://github.com/sc420/jellify-ur-website\">GitHub</a>{\" \"}\n              to see the code.\n            </p>\n\n            <h2>Supported Browsers</h2>\n            <ul>\n              <li>Chrome</li>\n              <li>Firefox</li>\n              <li>Edge</li>\n            </ul>\n\n            <h2>Other Softness</h2>\n            <p>\n              The bookmarklet detects the global variable{\" \"}\n              <code>JELLIFY_OPTIONS</code> to allow customization (See the{\" \"}\n              <a href=\"https://github.com/sc420/jellify-ur-website/blob/main/src/jellify.js\">\n                code\n              </a>{\" \"}\n              for the full list of options). For example, we can adjust{\" \"}\n              <code>physics.constraint.minStiffness</code> to adjust the\n              softness of the jelly (Please refresh this page first if you have\n              clicked other Jellify links):\n            </p>\n\n            <BookmarkletLink\n              text=\"Jellify (Soft)\"\n              type=\"soft\"\n              whenClick={this.setJellified.bind(this)}\n              wrapClassName=\"my-3\"\n              buttonClassName={this.getJellifyButtonClassName()}\n            />\n\n            <BookmarkletLink\n              buttonClassName={this.getJellifyButtonClassName()}\n              text=\"Jellify (Hard)\"\n              type=\"hard\"\n              whenClick={this.setJellified.bind(this)}\n              wrapClassName=\"my-3\"\n            />\n\n            <h2>Behind the Scene</h2>\n            <p>I use 2 libraries:</p>\n            <ul>\n              <li>\n                <a href=\"https://jquery.com/\">jQuery</a>\n              </li>\n              <li>\n                <a href=\"https://brm.io/matter-js/\">Matter.js</a>\n              </li>\n            </ul>\n\n            <p>\n              The steps of turning a website into a chaos basically follows\n              these steps:\n            </p>\n\n            <ol>\n              <li>Use jQuery to find elements and build a hierarchical tree</li>\n              <li>\n                Build a visual tree with larger rectangle as parent and\n                containing rectangles as its children on the hierarchical tree\n                with <code>getBoundingClientRect</code>\n              </li>\n              <li>Build objects and constraints in Matter.js world</li>\n              <li>Measure the acceleration of the scroll bar values</li>\n              <li>\n                Apply force on each outermost rectangles (I break down the\n                visual tree into smaller sub-tress, each of them is the root\n                node of the sub-tree)\n              </li>\n              <li>\n                Use CSS <code>transform</code> to sync the position and rotation\n                from Matter.js to the elements\n              </li>\n            </ol>\n\n            <p>\n              Wanna see what I was talking about with your own eye? Refresh this\n              page and click this button to turn on the debug mode:\n            </p>\n\n            <BookmarkletLink\n              buttonClassName={this.getJellifyButtonClassName()}\n              wrapClassName=\"my-3\"\n              type=\"debug\"\n              text=\"Jellify (Debug Mode)\"\n              whenClick={this.setJellified.bind(this)}\n            />\n\n            <p>\n              You will see borders around the elements as well as the Matter.js\n              canvas shown at the end of this page. Red solid border elements\n              represent the root nodes of the visual sub-tree. Blue dotted\n              border elements are non-root nodes in the visual sub-tree. You can\n              also drag-and-drop the rectangles in the Matter.js canvas, the\n              elements should reflect the movement and rotation immediately.\n            </p>\n\n            <h2>Limitations</h2>\n            <p>\n              Since we hide a physics engine and use CSS <code>transform</code>,\n              there are some limitations:\n            </p>\n            <ul>\n              <li>\n                The website must have scrollbars! Vertical or horizontal.\n                Otherwise the acceleration will always be 0\n              </li>\n              <li>\n                It only works well with static website since we only find the\n                elements once\n              </li>\n              <li>\n                The number of elements in the website should neither be too low\n                nor too high, otherwise it would appear as no effect or lag as\n                crazy as you can imagine\n              </li>\n              <li>\n                It seems CSS <code>transform</code> doesn't work well on{\" \"}\n                <code>position: absolute</code> and <code>position: fixed</code>{\" \"}\n                elements\n              </li>\n            </ul>\n\n            <h2>Why You Should Apply It to Your Website</h2>\n            <p>\n              The study finds this kind of bookmarklet provides some proven\n              benefits:\n            </p>\n\n            <ul>\n              <li>\n                Make visitors harder to find the information they want for any\n                clickbait website. Stay longer = More ads = Profit!\n              </li>\n              <li>\n                Annoy Internet addicted people to prevent them from browsing a\n                website for too long\n              </li>\n              <li>Encourage slow living, be more patient</li>\n            </ul>\n\n            <p>\n              The code behind the bookmarklet is very simple. Just paste the\n              following code into <code>&lt;head&gt;</code> and you are good to\n              go!\n            </p>\n\n            <pre>\n              <code>\n                https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\n              </code>\n            </pre>\n            <pre>\n              <code>\n                https://cdn.jsdelivr.net/npm/matter-js@0.17.1/build/matter.min.js\n              </code>\n            </pre>\n            <pre>\n              <code>https://sc420.github.io/jellify-ur-website/jellify.js</code>\n            </pre>\n\n            <p className=\"fw-bold\">Just kidding.</p>\n\n            <h2>Special Thanks</h2>\n            <p>\n              Thanks for my SO for coming up the idea to arrange the gummy bears\n              and the image editing. I'm not very familiar with PhotoShop.\n            </p>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}